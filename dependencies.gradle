ext {
    // Android
    androidBuildToolsVersion = "26.0.0"
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 26
    androidCompileSdkVersion = 26
    kotlinVersion = "1.1.4-3"

    // Libraries
    supportLibraryVersion = "26.0.1"
    rxJavaVersion = "2.0.2"
    javaxAnnotationVersion = "1.0"
    javaxInjectVersion = "1"
    rxKotlinVersion = "2.1.0"
    rxAndroidVersion = '2.0.1'
    androidAnnotationVersion = "21.0.3"
    daggerVersion = "2.11"
    gsonVersion = "2.8.1"
    okHttpVersion = "3.8.1"
    retrofitVersion = "2.3.0"
    roomVersion = '1.0.0'
    archCompVersion = '1.1.1'

    // Testing
    jUnitVersion = "4.12"
    assertJVersion = "3.8.0"
    mockitoKotlinVersion = "1.5.0"
    roboeletricVersion = "3.4.2"
    mockitoVersion = "1.5.0"
    androidSupportRunnerVersion = '1.0.0'
    androidSupportRulesVersion = '1.0.0'

    domainDependencies = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava: "io.reactivex.rxjava2:rxkotlin:${rxJavaVersion}"
    ]

    domainTestDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}"
    ]

    dataDependencies = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
    ]

    dataTestDependencies = [
            gson: "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin: "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            junit: "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}",
            roboeletric: "org.roboeletric:roboeletric:${roboeletricVersion}"
    ]

    remoteDependencies = [
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationVersion}",
            okHttp:             "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:       "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit:           "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter:  "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter:    "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    cacheDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationVersion}",
            roomRuntime:        "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler:       "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava:         "android.arch.persistence.room:rxjava2:${roomVersion}"
    ]

    cacheTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            robolectric:        "org.robolectric:robolectric:${roboeletricVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            roomTesting:        "android.arch.persistence.room:testing:${roomVersion}",
            archTesting:        "android.arch.core:core-testing:${roomVersion}",
            supportRunner:      "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:       "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    presentationDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationVersion}",
            archRuntime:        "android.arch.lifecycle:runtime:${archCompVersion}",
            archExtensions:     "android.arch.lifecycle:extensions:${archCompVersion}",
            archCompiler:       "android.arch.lifecycle:compiler:${archCompVersion}",
    ]

    presentationTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:        "org.robolectric:robolectric:${roboeletricVersion}",
            archTesting:        "android.arch.core:core-testing:${archCompVersion}",
    ]
}